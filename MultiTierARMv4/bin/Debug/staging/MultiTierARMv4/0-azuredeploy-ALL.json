{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    // Global
    "DeploymentID": {
      "type": "string",
      "defaultValue": "01",
      "minLength": 2
    },
    "Prefix": {
      "type": "string",
      "defaultValue": "MSFT",
      "minLength": 1
    },
    "Environment": {
      "type": "string",
      "defaultValue": "Dev",
      "allowedValues": [
        "Dev",
        "Test",
        "Prod"
      ]
    },
    "vmStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ]
    },
    // Used for all VM's
    "vmAdminUserName": {
      "type": "string",
      "defaultValue": "BRW",
      "minLength": 3
    },
    // Used for all VM's, local and Domain Admin Password
    "vmAdminPassword": {
      "type": "securestring"
    },
    "vmDomainName": {
      "type": "string",
      "defaultValue": "Contoso.com",
      "allowedValues": [
        "Contoso.com",
        "AlpineSkiHouse.com",
        "Fabrikam.com",
        "TreyResearch.net"
      ],
      "metadata": {
        "description": "Which ever domain you choose, ensure that your certificates in the KeyVault Match"
      }
    },
    "vmWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ]
    },
    // Looking to remove this and move to InfoObject
    "numberOfInstancesSQLServer": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 20,
      "metadata": {
        "description": "Number of SQL Server VMs to deploy"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access artifactsLocation"
      }
    },
    "vaultName": {
      "type": "string",
      "defaultValue": "kvcontosoeastus2",
      "metadata": {
        "description": "Name of the KeyVault, should choose keyvault in the same region as the deployment"
      },
      "allowedValues": [
        "kvcontosoeastus2",
        "kvcontosoeastus"
      ]
    },
    "vaultResourceGroup": {
      "type": "string",
      "defaultValue": "rgGlobal",
      "metadata": {
        "description": "Resource Group of the KeyVault"
      }
    },
    "certificateUrl": {
      "type": "string",
      "defaultValue": "https://kvcontosoeastus2.vault.azure.net:443/secrets/MultiDomainwildcard/07534e07585c4f6ba3ffd1769af55d01",
      "metadata": {
        "description": "Url of the certificate with version in KeyVault e.g. https://testault.vault.azure.net/secrets/testcert/dsfsdffdsfdsfdsfdsfdsfdsdsffsd"
      }
    },
    "certificateThumbprint": {
      "type": "string",
      "defaultValue": "78F957B6738273FA67C9756944E52FA0C1AAF307",
      "metadata": {
        "description": "Thee ThumbPrint of the certificate in KeyVault that will be used on the Web Servers"
      }
    },
    "WildcardCertBase64": {
      "type": "securestring"
    },
    "DSCUpdateTagVersion": {
      "type": "string",
      "defaultValue": "1.0",
      "metadata": {
        "description": "This value must be changed from a previous deployment to ensure the DSC extensions will re-run"
      }
    },
    "StorageAccountKeySource": {
      "type": "securestring",
      "metadata": {
        "description": "Used for copying source files to DSC from Azure Files storage"
      }
    },
    "OMSWorkspaceId": {
      "type": "securestring"
    },
    "OMSKey": {
      "type": "securestring"
    }
  },
  "variables": {
    "Deployment": "[concat(parameters('Prefix'),parameters('Environment'),parameters('DeploymentID'))]",
    
//      {"DPStage" : "DataBase" ,  "TemplateName" : "3-azuredeploy-DataBase.json" }
//      {"DPStage" : "VMPrivate",  "TemplateName" : "4-azuredeploy-VMPublic.json"  }
//      {"DPStage" : "VMPublic" ,  "TemplateName" : "5-azuredeploy-VMPrivate.json" },
//      {"DPStage" : "ILBalancer" ,"TemplateName" : "6-azuredeploy-ILBalancer.json" },
//       
    
    "DeploymentInfoObject": [
      {"DPStage" : "VNet"     ,  "TemplateName" : "1-azuredeploy-VNet.json"     },
      {"DPStage" : "Directory",  "TemplateName" : "2-azuredeploy-Directory.json"},
      {"DPStage" : "WAF" ,       "TemplateName" : "7-azuredeploy-WebAppFirewall.json" },
      {"DPStage" : "VMPublic" ,  "TemplateName" : "4-azuredeploy-VMPublic.json" },
      {"DPStage" : "VMPrivate",  "TemplateName" : "5-azuredeploy-VMPrivate.json"  }

    ]
  },
  "resources": [
    {
      "name": "[concat('dp', variables('Deployment'), variables('DeploymentInfoObject')[0].DPStage)]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('DeploymentInfoObject')[0].TemplateName, parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": "[deployment().properties.parameters]"
      }
    },
    {
      "name": "[concat('dp', variables('Deployment'), variables('DeploymentInfoObject')[copyIndex(1)].DPStage)]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[concat('dp', variables('Deployment'), variables('DeploymentInfoObject')[sub(copyIndex(1),1)].DPStage)]"
      ],
      "copy": {
        "name": "dpLoop",
        "count": "[sub(length(variables('DeploymentInfoObject')),1)]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', variables('DeploymentInfoObject')[copyIndex(1)].TemplateName, parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": "[deployment().properties.parameters]"
      }
    }
  ],
  "outputs": {
  }
}
